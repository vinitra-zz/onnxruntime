parameters:
  AgentPool : 'Win-CPU'

jobs:
- job: NuGet_Test_Win
  pool: ${{ parameters.AgentPool }}
  dependsOn:
  - NuGet_Packaging
  condition: succeeded()
  variables:
    OnnxRuntimeBuildDirectory: '$(Build.BinariesDirectory)'
  steps:
  - template: ../../templates/set-test-data-variables-step.yml
  - template: ../../templates/windows-build-tools-setup-steps.yml
    parameters:
      EnvSetupScript: 'setup_env.bat'
      buildArch: 'x64'
      setVcvars: true

  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact'
    inputs:
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - script: |
     @echo "Running build.py --update"
     $(Build.BinariesDirectory)\packages\python\python.exe $(Build.SourcesDirectory)\tools\ci_build\build.py --build_dir $(Build.BinariesDirectory) --config Debug --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe  --ctest_path $(Build.BinariesDirectory)\cmake\bin\ctest.exe --update --download_test_data --test_data_url=$(TestDataUrl) --test_data_checksum=$(TestDataChecksum)

    displayName: 'Download Test Data'

  - script: |
     @echo "Running Runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Build.BinariesDirectory)\nuget-artifact
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C#) .Net Core'
    continueOnError: true

  - script: |
     @echo "Running Runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Build.BinariesDirectory)\nuget-artifact netcoreapp2.1 x86
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C#) .Net Core x86'
    enabled: false
    continueOnError: true

  - script: |
     @echo "Running Runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Build.BinariesDirectory)\nuget-artifact net461
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C#) .NetFramework'
    continueOnError: true

  - script: |
     @echo "Running Runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests\runtest.bat $(Build.BinariesDirectory)\nuget-artifact net461 x86
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C#) .NetFramework x86'
    enabled: false
    continueOnError: true

  - script: |
     @echo "Running runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests.Capi\runtest.bat $(Build.BinariesDirectory)\nuget-artifact
     REM Need an ErrorLevel check, since the script uses Exit /B
     IF NOT %ERRORLEVEL% EQU 0 {
         EXIT 1
     }
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C-API) '
    timeoutInMinutes: 30
    continueOnError: true

  # test C++ API sample
  - script: |
     @echo ##vso[task.setvariable variable=OnnxRuntimeSampleCode]CXX_Api_Sample.cpp

  - script: |
     @echo "Running runtest.bat"
     test\Microsoft.ML.OnnxRuntime.EndToEndTests.Capi\runtest.bat $(Build.BinariesDirectory)\nuget-artifact
     REM Need an ErrorLevel check, since the script uses Exit /B
     IF NOT %ERRORLEVEL% EQU 0 {
         EXIT 1
     }
    workingDirectory: '$(Build.SourcesDirectory)\csharp'
    displayName: 'Run End to End Test (C++ API) '
    timeoutInMinutes: 30
    continueOnError: true

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    condition: always()

  - template: ../../templates/clean-agent-build-directory-step.yml
